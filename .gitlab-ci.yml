stages:
  - prepare
  - test
  - build

.production:
  variables:
    IMAGE: $CI_REGISTRY_IMAGE

.build:
  image: docker:24.0.2
  services:
    - docker:24.0.2-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker pull $IMAGE || true
    - docker build --cache-from $IMAGE -t $IMAGE -f $DOCKERFILE .
    - docker push $IMAGE

.pull-bundle-cache:
  artifacts:
    paths:
      - ${BUNDLE_PATH}

.bundle-install: &bundle-install
  - bundle config set --local without "development"
  - bundle config --local path ${BUNDLE_PATH}
  - bundle install --prefer-local --quiet --jobs $(nproc) "${FLAGS[@]}"

.bundle-update: &bundle-update
  artifacts:
    expire_in: 30d
    paths:
      - ${BUNDLE_PATH}
    when: on_success
  except:
    - main
  image: $IMAGE
  script:
    - *bundle-install
  stage: prepare

variables:
  SAST_DEFAULT_ANALYZERS: brakeman
  SAST_EXCLUDED_ANALYZERS: eslint,semgrep,nodejs-scan
  SECRET_DETECTION_EXCLUDED_PATHS: vendor,node_modules

include:
- template: Security/SAST.gitlab-ci.yml
- template: Security/Dependency-Scanning.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml

build:
  stage: build
  extends:
    - .production
    - .build
  only:
    - main
  after_script:
    - docker tag $IMAGE $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  variables:
    DOCKERFILE: Dockerfile
