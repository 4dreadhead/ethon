stages:
  - prepare
  - rubocop
  - test
  - build
  - deploy

.test:
  variables:
    IMAGE: $CI_REGISTRY_IMAGE:test-3.2.2
    BUNDLE_PATH: vendor

.production:
  tags:
    - intercom-support-production
  variables:
    IMAGE: $CI_REGISTRY_IMAGE

.nginx:
  variables:
    IMAGE: $CI_REGISTRY_IMAGE:nginx

.build:
  image: docker:24.0.2
  services:
    - docker:24.0.2-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker pull $IMAGE || true
    - docker build --cache-from $IMAGE --build-arg PORT=$PORT -t $IMAGE -f $DOCKERFILE .
    - docker push $IMAGE

.deploy:
  stage: deploy
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  after_script:
    - docker system prune -a -f --volumes


.pull-bundle-cache:
  artifacts:
    paths:
      - $BUNDLE_PATH

.bundle-install: &bundle-install
  - bundle config set --local without "development"
  - bundle config --local path $BUNDLE_PATH
  - bundle install --prefer-local --quiet --jobs $(nproc) "${FLAGS[@]}"

.bundle-update: &bundle-update
  artifacts:
    expire_in: 30d
    paths:
      - $BUNDLE_PATH
    when: on_success
  except:
    - main
  image: $IMAGE
  script:
    - *bundle-install
  stage: prepare

build-test-image:
  except:
    - main
  extends:
    - .test
  image: docker:24.0.2
  services:
    - docker:24.0.2-dind
  stage: prepare
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build -t $IMAGE -f spec/Dockerfile .
    - docker push $IMAGE
  when: manual

build-nginx:
  except:
    - main
  extends:
    - .nginx
  image: docker:24.0.2
  services:
    - docker:24.0.2-dind
  stage: prepare
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker build -t $IMAGE -f ./nginx
    - docker push $IMAGE
  when: manual

update-bundle-cache-force:
  extends: .test
  <<: *bundle-update
  when: manual

rubocop:
  before_script:
  - *bundle-install
  except:
    - main
  extends:
  - .test
  - .pull-bundle-cache
  image: $IMAGE
  script:
    - bundle exec rubocop -P
  stage: rubocop

variables:
  SAST_DEFAULT_ANALYZERS: brakeman
  SAST_EXCLUDED_ANALYZERS: eslint,semgrep,nodejs-scan
  SECRET_DETECTION_EXCLUDED_PATHS: vendor,node_modules
  PORT: 3000

include:
- template: Security/SAST.gitlab-ci.yml
- template: Security/Dependency-Scanning.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml

build:
  stage: build
  extends:
    - .production
    - .build
  # only:
    # - main
  when: manual
  after_script:
    - docker tag $IMAGE $CI_REGISTRY_$IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_$IMAGE:$CI_COMMIT_SHA
  variables:
    DOCKERFILE: Dockerfile

deploy:
  extends:
    - .production
    - .deploy
  when: manual
  script:
    - docker compose -f /var/www/intercom-support/docker-compose.yml up -d app
